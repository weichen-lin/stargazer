version: '2'

volumes:
  stargazer-postgres:
  stargazer-neo4j:

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'
    networks:
      - stargazer-net

  kafka:
    container_name: stargazer-kafka
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    expose:
      - '9093'
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://stargazer-kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - stargazer-net
    depends_on:
      - zookeeper

  transformer:
    container_name: stargazer-transformer
    image: stargazer-transformer:base
    ports:
      - '8000:8000'
    environment:
      KAFKA_BROKER: kafka:9093
    volumes:
      - ./transformer:/app
    networks:
      - stargazer-net
    command: ['sleep', 'infinity']

  postgresql:
    container_name: stargazer-postgres
    image: pgvector/pgvector:pg14
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: johndoe
      POSTGRES_PASSWORD: randompassword
      POSTGRES_DB: mydb
    volumes:
      - stargazer-postgres:/var/lib/postgresql/data
    networks:
      - stargazer-net

  neo4j:
    container_name: stargazer-neo4j
    image: neo4j:latest
    ports:
      - '7687:7687'
      - '7474:7474'
    environment:
      NEO4J_AUTH: neo4j/randompassword
    volumes:
      - stargazer-neo4j:/data
    networks:
      - stargazer-net

  producer:
    container_name: stargazer-producer
    image: stargazer-producer:latest
    ports:
      - '8080:8080'
    networks:
      - stargazer-net
    depends_on:
      - postgresql
      - neo4j
    command: ['sleep', 'infinity']

networks:
  stargazer-net:
    driver: bridge
